# Docker Compose file for mwdb-core end-to-end with karton test suite

version: "3.3"
services:
  mwdb:
    build:
      context: .
      dockerfile: deploy/docker/Dockerfile
    depends_on:
      - postgres
      - redis
    image: certpl/mwdb
    restart: on-failure
    environment:
      MWDB_ENABLE_KARTON: 1
      MWDB_REDIS_URI: redis://redis/
      MWDB_POSTGRES_URI: postgresql://mwdb:e2e-postgres-password-karton-tests@postgres/mwdb
      # Hardcoded secret key for consistent JWT testing
      MWDB_SECRET_KEY: e2e-testing-key
      MWDB_ADMIN_LOGIN: admin
      MWDB_ADMIN_EMAIL: admin@localhost
      MWDB_ADMIN_PASSWORD: e2e-mwdb-admin-password-karton-tests
      MWDB_BASE_URL: http://127.0.0.1
      MWDB_ENABLE_RATE_LIMIT: 0
      MWDB_ENABLE_REGISTRATION: 1
      UWSGI_PROCESSES: 4
    volumes:
      - "./docker/mail_templates:/app/mail_templates"
      - "./mwdb:/app/mwdb"
      - "./dev/karton.ini:/etc/karton/karton.ini"
  mwdb-web:
    depends_on:
      - mwdb
    build:
      context: .
      dockerfile: deploy/docker/Dockerfile-web
    image: certpl/mwdb-web
    ports:
      - "80:80"
    restart: on-failure
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: mwdb
      POSTGRES_DB: mwdb
      POSTGRES_PASSWORD: e2e-postgres-password-karton-tests
  mwdb-tests:
    build: tests/backend
    depends_on:
      - mwdb
    image: certpl/mwdb-tests
    environment:
      MWDB_ADMIN_PASSWORD: e2e-mwdb-admin-password-karton-tests
      MWDB_ADMIN_LOGIN: admin
  web-tests:
    build: tests/frontend
    depends_on:
      - mwdb
      - mwdb-web
    image: certpl/mwdb-web-tests
    environment:
      MWDB_ENABLE_KARTON: 1
      MWDB_REDIS_URI: redis://redis/
      MWDB_POSTGRES_URI: postgresql://mwdb:e2e-postgres-password-karton-tests@postgres/mwdb
      MWDB_SECRET_KEY: e2e-testing-key
      MWDB_ADMIN_LOGIN: admin
      MWDB_ADMIN_EMAIL: admin@localhost
      MWDB_ADMIN_PASSWORD: e2e-mwdb-admin-password-karton-tests
      MWDB_BASE_URL: http://127.0.0.1
      MWDB_ENABLE_RATE_LIMIT: 0
      MWDB_ENABLE_REGISTRATION: 1
      UWSGI_PROCESSES: 4
  redis:
    image: redis:alpine
  minio:
    image: minio/minio
    command: server /data
    volumes:
      - /tmp/minio:/data
    ports:
      - "127.0.0.1:9000:9000"
    environment:
      - MINIO_ACCESS_KEY=mwdb-test-access
      - MINIO_SECRET_KEY=mwdb-test-key
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "127.0.0.1:8025:8025"
  karton-system:
    image: certpl/karton-system:158d07960d8cd39dee8771af719f560df93b3212
    depends_on:
      - redis
      - minio
    volumes:
      - "./dev/karton.ini:/etc/karton/karton.ini"
    entrypoint: karton-system
    command: --setup-bucket
    environment:
      KARTON_MWDB_API_URL: http://mwdb-web.:80/api/
      KARTON_MWDB_USERNAME: admin
      KARTON_MWDB_PASSWORD: e2e-mwdb-admin-password-karton-tests
  karton-classifier:
    image: certpl/karton-classifier:320c99de8e05ff3d029609e73ac31bcf2d0ba56c
    depends_on:
      - redis
      - minio
    volumes:
      - "./dev/karton.ini:/etc/karton/karton.ini"
    environment:
      KARTON_MWDB_API_URL: http://mwdb-web.:80/api/
      KARTON_MWDB_USERNAME: admin
      KARTON_MWDB_PASSWORD: e2e-mwdb-admin-password-karton-tests
  karton-dashboard:
    image: certpl/karton-dashboard:2c35fb3cae399dba8913f8ad1be9dd6b820b1fd6
    depends_on:
      - redis
      - minio
    volumes:
      - "./dev/karton.ini:/etc/karton/karton.ini"
    ports:
      - "127.0.0.1:8030:5000"
    environment:
      KARTON_MWDB_API_URL: http://mwdb-web.:80/api/
      KARTON_MWDB_USERNAME: admin
      KARTON_MWDB_PASSWORD: e2e-mwdb-admin-password-karton-tests
  karton-mwdb-reporter:
    image: certpl/karton-mwdb-reporter:a4a5a2ece14073e3a25a38bd5f1b0fa14ba725d3
    depends_on:
      - redis
      - minio
    volumes:
      - "./dev/karton.ini:/etc/karton/karton.ini"
    environment:
      KARTON_MWDB_API_URL: http://mwdb-web.:80/api/
      KARTON_MWDB_USERNAME: admin
      KARTON_MWDB_PASSWORD: e2e-mwdb-admin-password-karton-tests