import React from "react";
import {TagList} from '../Tag';

function RecentRow(props) {
    
}

function getHighlightClass(upload_time) {
    let delta = new Date() - new Date(upload_time);
    if (delta < 24*60*60*1000)
        return "today";
    if (delta < 72*60*60*1000)
        return "recently";
    return "";
}

export function ObjectField(args) {
    const FieldItem = (props) => (
        <td className={`${args.className || ""} col`}>
            {args.render(props)}
        </td>
    )
    FieldItem.args = args
    FieldItem.label = args.label
    return FieldItem
}

export function TagField(args)
{   
    return ObjectField({
        ...args,
        render: (props) => (
            <TagList tags={props.tags}
                     tagClick={(ev, tag) => { ev.preventDefault(); props.addToQuery("tag", tag) }}
                     tagRemove={(ev, tag) => props.addToQuery("NOT tag", tag)}
                     filterable/>
        )
    })
}

export function QueryableField(args) {
    return ObjectField({
        ...args,
        render: (props) => (
            <a href="#query" onClick={(ev) => { 
                ev.preventDefault(); 
                props.addToQuery(args.queryKey, args.queryValue(props))
            }}>
                {args.queryValue(props)}
            </a>
        )
    })
}

export function ObjectRow(fields) {
    const RowItem = (props) => (
        <tr className={`${getHighlightClass(props.upload_time)} d-flex`}>
            {fields.map((Field, idx) => <Field key={idx} {...props}/>)}
        </tr>
    )
    RowItem.fields = fields
    return RowItem
}
