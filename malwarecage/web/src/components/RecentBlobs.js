import React from 'react';

import { RecentView } from "./RecentView";
import {TagList} from './Tag';

import { DateString, ObjectLink } from "@malwarefront/ui";

function RecentBlobRow(props) {
    const blobName = <div className="recent-field">{props.blob_name}</div>
    const blobType = (
        <div className="recent-field">
            <a href="#query" onClick={(ev) => { 
                ev.preventDefault(); 
                props.addToQuery("type", props.blob_type)
            }}>
                {props.blob_type}
            </a>
        </div>
    )
    const blobId = (
        <div className="recent-field">
            <ObjectLink type="text_blob" id={props.id}/>
        </div>
    )
    const tags = (
        <TagList tags={props.tags}
                 tagClick={(ev, tag) => { ev.preventDefault(); props.addToQuery("tag", tag) }}
                 tagRemove={(ev, tag) => props.addToQuery("NOT tag", tag)}
                 filterable/>
    )
    const firstSeen = <div className="recent-field"><DateString date={props.upload_time}/></div>
    const lastSeen = <div className="recent-field"><DateString date={props.last_seen}/></div>

    return (
        <tr className="d-flex">
            <td className="col-md-1 col-6">
                {/* Shrinked mode */}
                <div className="d-md-none d-flex">
                    <b style={{minWidth: "4.5rem"}}>Name: </b>
                    {blobName}
                </div>
                <div className="d-md-none d-flex">
                    <b style={{minWidth: "4.5rem"}}>ID: </b>
                    {blobId}
                </div>
                {/* Wide mode */}
                <div className="d-none d-md-flex">
                    {blobName}
                </div>
            </td>
            <td className="col-md-4 col-6">
                {/* Shrinked mode */}
                <div className="d-md-none d-flex">
                    <b style={{minWidth: "3rem"}}>Type: </b>
                    {blobType}
                </div>
                <div className="d-md-none d-flex">
                    <b style={{minWidth: "3rem"}}>Date: </b>
                    {firstSeen}
                </div>
                <div className="d-md-none">
                    {tags}
                </div>
                {/* Wide mode */}
                <div className="d-none d-md-flex">
                    {blobId}
                </div>
            </td>
            <td className="col-md-1 d-none d-md-block">
                {/* Wide mode */}
                {blobType}
            </td>
            <td className="col-md-2 d-none d-md-block">
                {/* Wide mode */}
                
            </td>
            <td className="col-md-2 d-none d-md-block">
                {/* Wide mode */}
                {firstSeen}
            </td>
            <td className="col-md-2 d-none d-md-block">
                {/* Wide mode */}
                {lastSeen}
            </td>
        </tr>
    )
}

function RecentBlobHeader() {
    return (
        <tr className="d-flex">
            {/* Shrinked mode */}
            <th className="col-6 d-md-none">Blob name/Blob ID</th>
            <th className="col-6 d-md-none">Type/Date/Tags</th>
            {/* Wide mode */}
            <th className="col-1 d-none d-md-block">Blob name</th>
            <th className="col-4 d-none d-md-block">Blob ID</th>
            <th className="col-1 d-none d-md-block">Blob type</th>
            <th className="col-2 d-none d-md-block">Tags</th>
            <th className="col-2 d-none d-md-block">First seen</th>
            <th className="col-2 d-none d-md-block">Last seen</th>
        </tr>
    )
}

export default (props) => (
    <RecentView type="blob" 
                rowComponent={RecentBlobRow}
                headerComponent={RecentBlobHeader} 
                dhashOnly 
                {...props}/>
)
