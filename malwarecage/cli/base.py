import click
from click_default_group import DefaultGroup
from flask.cli import AppGroup, NoAppException, with_appcontext
import textwrap

from malwarecage.core.config import app_config


def create_app():
    try:
        app_config.read()
    except Exception as e:
        click.echo(textwrap.dedent("""
        [!] Wrong Malwarecage configuration.

        Use 'malwarecage configure' to setup your Malwarecage instance.
        """))
        raise NoAppException(f"Application not configured: {str(e)}")

    from .. import app
    return app.app


class AppDefaultGroup(DefaultGroup):
    """
    Reimplementation of Flask.cli.AppGroup to support DefaultGroup facilities
    """

    def command(self, *args, **kwargs):
        wrap_for_ctx = kwargs.pop("with_appcontext", True)

        def decorator(f):
            if wrap_for_ctx:
                f = with_appcontext(f)
            return DefaultGroup.command(self, *args, **kwargs)(f)

        return decorator

    def group(self, *args, **kwargs):
        kwargs.setdefault("cls", AppGroup)
        return super().group(*args, **kwargs)
