import React, {Component} from 'react';

import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'
import {faTrash} from "@fortawesome/free-solid-svg-icons"
import api from "@malwarefront/api";
import QueryAddModal from "./QueryAddModal";

class QuickQuery extends Component {
    state = {
        queries:[],
        isAddModalOpen:false
    }

    getQueries = async () =>{
        let response = await api.getQueries(this.props.type)
        this.setState({queries: response.data})
    }

    componentDidMount() {
        this.getQueries()
    }

    addQuickQuery = async (name) => {
        await api.addQuery(this.props.type , name, this.props.query)
        this.getQueries()
        this.setState({isAddModalOpen: false})
    }

    deleteQuery = async (id) => {
        await api.deleteQuery(id)
        this.getQueries()
    }

    render() {
        console.log(this.state.queries)
        let queryBadges = Object(this.state.queries).map((v) =>
                <span key={v.id} className="badge badge-info" style={{"cursor": "pointer"}}
                      data-toggle="tooltip"
                      title="Add a quick query to your search or click on the trash to delete it."
                      onClick={() => {this.props.submitQuery(v.query)}}>
                    {v.name}{" "}
                    <span data-toggle="tooltip"
                          title="Delete quick query."
                          onClick={() => {this.deleteQuery(v.id)}}>
                        <FontAwesomeIcon icon={faTrash} pull="right" size="sm"/>
                    </span>
                </span>
        )

        const newQuickQuery = <span className="badge badge-info" style={{"cursor": "pointer"}}
                                    data-toggle="tooltip"
                                    title="Save current search as quick query."
                                    onClick={(ev) => {ev.preventDefault(); this.setState({isAddModalOpen: true})}}>
                                    +
                                </span>

        return (
            <span>{queryBadges}{newQuickQuery}
            <QueryAddModal isOpen={this.state.isAddModalOpen}
                                   onSubmit={this.addQuickQuery}
                                   onRequestModalClose={
                                       () => this.setState({
                                           isAddModalOpen: false,
                                       })
                                   }/></span>
        )
    }
}

export default QuickQuery;
